description: Perform a terraform plan, preceeded by an optional init
parameters:
  terraform_version:
    type: string
    default: 0.12.3
  working_directory:
    description: where to execute terraform from
    type: string
    default: ~/project
  lock_timeout:
    description: How long to wait for a lock to be acquired before erroring
    type: string
    default: 5m
  plan_file:
    description: File path of a plan file to be produced, relative to working_directory
    type: string
    default: terraform.plan
  extra_args:
    description: extra args to use when running terraform plan
    type: string
    default: ""
  extra_args_init:
    description: extra args to use when running terraform init
    type: string
    default: ""
  attach_workspace:
    description: Where to attach the workspace to. Empty string means no attachment will happen.
    type: string
    default: ~/project
  init:
    description: Wheter to perform a terraform init before the plan
    type: boolean
    default: true
  module_ssh_sources:
    description: A space separated string with the domains that terraform modules are fetched from using ssh (for example 'github.com bitbucket.com')
    type: string
    default: "github.com"
  persist_to_workspace_filepath_prefix:
    description: A filepath prefix to be applied to files being persisted to the workspace, relative to attach_workspace. Needs to be set when working_directory does not match the attach_workspace path, in order to persist files in the correct location.
    type: string
    default: ""
  terraform_workspace:
    description: Which terraform workspace to use, if any. The workspace will be created if it doesn't exist.
    type: string
    default: ""
  verbose:
    description: Prints out persisted file names
    type: boolean
    default: false
executor:
  name: terraform
  version: <<parameters.terraform_version>>
working_directory: <<parameters.working_directory>>
steps:
  - when:
      condition: <<parameters.attach_workspace>>
      steps:
        - attach_workspace:
            at: <<parameters.attach_workspace>>
  - when:
      condition: <<parameters.verbose>>
      steps:
        - run: |
            echo "Workspace files:"
            ls *
  - when:
      condition: <<parameters.init>>
      steps:
        - init:
            module_ssh_sources: <<parameters.module_ssh_sources>>
            extra_args: <<parameters.extra_args_init>>
            terraform_workspace: <<parameters.terraform_workspace>>
  - plan:
      lock_timeout: <<parameters.lock_timeout>>
      extra_args: <<parameters.extra_args>>
      plan_file: <<parameters.plan_file>>
  - when:
      condition: <<parameters.attach_workspace>>
      steps:
        - persist_to_workspace:
            root: <<parameters.attach_workspace>>
            paths:
              - <<parameters.persist_to_workspace_filepath_prefix>>
  - when:
      condition: <<parameters.verbose>>
      steps:
        - run: |
            echo "Persisted files:"
            ls *
